'use client';

import { useEffect, useState } from 'react';
import { useLoading } from '../../contex/LoadingContext';

export default function AdminMapSection() {
  const [address, setAddress] = useState('');
  const [isSaving, setIsSaving] = useState(false);
  const { setLoading } = useLoading(); 

  useEffect(() => {
    setLoading(true);
    fetch('/api/map')
      .then((res) => res.json())
      .then((data) => setAddress(data.address || ''))
      .catch((err) => {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∞–¥—Ä–µ—Å–∞:', err);
      })
      .finally(() => setLoading(false));
  }, [setLoading]);

  const handleSubmit = async (e) => {
    e.preventDefault();
    setIsSaving(true);

    try {
      await fetch('/api/map', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ address }),
      });
      alert('–ê–¥—Ä–µ—Å –æ–±–Ω–æ–≤–ª—ë–Ω!');
    } catch (err) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏:', err);
      alert('–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å –∞–¥—Ä–µ—Å.');
    } finally {
      setIsSaving(false);
    }
  };

  return (
    <form onSubmit={handleSubmit} className="max-w-xl space-y-4">
      <h1 className="text-2xl font-bold">–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∞–¥—Ä–µ—Å</h1>
      <input
        type="text"
        value={address}
        onChange={(e) => setAddress(e.target.value)}
        className="w-full border p-2 rounded"
        placeholder="–í–≤–µ–¥–∏—Ç–µ –∞–¥—Ä–µ—Å"
      />
      <button
        type="submit"
        disabled={isSaving}
        className="bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700"
      >
        {isSaving ? '–°–æ—Ö—Ä–∞–Ω—è–µ–º...' : 'üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å'}
      </button>
    </form>
  );
}
